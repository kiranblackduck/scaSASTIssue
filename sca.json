{"$schema":"https://gitlab.com/gitlab-org/security-products/security-report-schemas/-/raw/master/dist/dependency-scanning-report-format.json","version":"15.2.1","vulnerabilities":[{"id":"BDSA-2012-0001 commons-codec 1.9: rest-assured 2.9.0: commons-codec","category":"dependency_scanning","name":"Transitive Dependency: Apache Commons Codec 1.9 from rest-assured 2.9.0 (BDSA-2012-0001)","message":"","description":"Apache Commons contains a flaw that is due to the Base32 codec decoding  invalid strings instead of rejecting them. This may allow a remote attacker to tunnel  additional information via a base 32 string that seems valid.\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| commons-codec 1.9  | 1.15.0.redhat-00001  | 20041127.091804 |\n\n\n[Click Here To See More Details in Polaris](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/e4a8bfc0-8df1-4c35-b49d-3a732191ce95/projects/d05f4c8f-65db-458e-8a12-3aa37b7e146c/components/6f6586d6-48dc-4f8e-bb92-e4f0f01f57f6?branchId=96b91994-4ffc-4051-b7a9-60adbc16163b&component=932a1ab1-4722-4bbd-9f5d-d6cd2aa1c7e7)\n\n\n## Description\nApache Commons contains a flaw that is due to the Base32 codec decoding  invalid strings instead of rejecting them. This may allow a remote attacker to tunnel  additional information via a base 32 string that seems valid.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [BDSA-2012-0001](https://openhub.net/vulnerabilities/bdsa/BDSA-2012-0001) - Argument Injection\n\n\n\n## Solution\nFixed in version [**1.13-rc1**](https://github.com/apache/commons-codec/releases/tag/commons-codec-1.13-RC1) by [this](https://github.com/apache/commons-codec/commit/48b615756d1d770091ea3322eefc08011ee8b113) commit.\n\n\n\n## Dependency tree\n- ReachabilityTests:ReachabilityTests:0.0.1-SNAPSHOT:-maven\n    - com.jayway.restassured:rest-assured:2.9.0\n        - org.apache.httpcomponents:httpclient:4.5.1\n            - commons-codec:commons-codec:1.9\n\n\n## References\n* Common Weakness Enumeration: [CWE-88](https://cwe.mitre.org/data/definitions/88.html)\n\n","cve":"","severity":"Medium","confidence":"","scanner":{"id":"","name":"","vendor":{"name":""}},"location":{"file":"file://unknown-file","start_line":1,"end_line":null,"dependency":{"package":{"name":"Apache Commons Codec","version":"1.9"},"version":"1.9"}},"identifiers":[{"type":"cwe","name":"CWE-88","value":"CWE-88","url":"https://cwe.mitre.org/data/definitions/88.html"},{"type":"_id","name":"BDSA-2012-0001","value":"Transitive Dependency: Apache Commons Codec 1.9 from rest-assured 2.9.0 (BDSA-2012-0001)","url":"https://openhub.net/vulnerabilities/bdsa/BDSA-2012-0001"},{"type":"_id","name":"security","value":"security"},{"type":"_id","name":"Transitive Dependency","value":"Transitive Dependency"},{"type":"_id","name":"open_source_analysis","value":"open_source_analysis"},{"type":"_id","name":"patch_available","value":"patch_available"}]},{"id":"CVE-2021-44228 log4j-core 2.12.1: org.apache.logging.log4j","category":"dependency_scanning","name":"Direct Dependency: Apache Log4j 2.12.1 (CVE-2021-44228)","message":"","description":"Apache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity & Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| log4j-core 2.12.1  | 2.20.0  | 2.20.0 |\n\n\n[Click Here To See More Details in Polaris](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/e4a8bfc0-8df1-4c35-b49d-3a732191ce95/projects/d05f4c8f-65db-458e-8a12-3aa37b7e146c/components/dc279f3e-98e5-4589-a0e8-63ff1ef745a1?branchId=96b91994-4ffc-4051-b7a9-60adbc16163b&component=7460c937-f013-4c3a-bdf3-ace04cfd0304)\n\n\n## Description\nApache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity & Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2021-44228](https://openhub.net/vulnerabilities/bdsa/CVE-2021-44228) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in versions:\n*  [**2.16.0-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.16.0-rc1) by [this](https://github.com/apache/logging-log4j2/commit/27972043b76c9645476f561c5adc483dec6d3f5d) commit.\n*  [**2.12.2-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.12.2-rc1) by [this](https://github.com/apache/logging-log4j2/commit/f819c83804152cb6ed94cb408302e36b21b65053) commit and [this](https://github.com/apache/logging-log4j2/commit/70edc233343815d5efa043b54294a6fb065aa1c5) commit.\n*   [**2.3.1-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.3.1-rc1) by [this](https://github.com/apache/logging-log4j2/commit/be848dacbac6df30c4f32b2852e24446033ecf79) commit and [this](https://github.com/apache/logging-log4j2/commit/f6564bb993d547d0a371b75d869042c334bf57f0) commit.\n\nThe latest releases can be found [here](https://github.com/apache/logging-log4j2/tags).\n\nNOTE: It is recommended to upgrade to version  [**2.17.0**](https://downloads.apache.org/logging/log4j/2.17.0/). This recommendation is due to related vulnerabilities (BDSA-2021-3779, CVE-2021-45046) affecting the version that this vulnerability is fixed in.\n\n## Workaround\nThe vendor states that:\n\n> This issue can be mitigated in prior releases (<**2.16.0**) by removing the JndiLookup class from the classpath (example: `zip -q -d log4j-core-*.jar org/apache/logging/log4j/core/lookup/JndiLookup.class`).\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","cve":"","severity":"Critical","confidence":"","scanner":{"id":"","name":"","vendor":{"name":""}},"location":{"file":"file://unknown-file","start_line":1,"end_line":null,"dependency":{"package":{"name":"Apache Log4j","version":"2.12.1"},"version":"2.12.1"}},"identifiers":[{"type":"cwe","name":"CWE-502","value":"CWE-502","url":"https://cwe.mitre.org/data/definitions/502.html"},{"type":"_id","name":"CVE-2021-44228","value":"Direct Dependency: Apache Log4j 2.12.1 (CVE-2021-44228)","url":"https://openhub.net/vulnerabilities/bdsa/CVE-2021-44228"},{"type":"_id","name":"security","value":"security"},{"type":"_id","name":"Direct Dependency","value":"Direct Dependency"},{"type":"_id","name":"open_source_analysis","value":"open_source_analysis"},{"type":"_id","name":"patch_available","value":"patch_available"}]},{"id":"CVE-2021-45046 log4j-core 2.12.1: org.apache.logging.log4j","category":"dependency_scanning","name":"Direct Dependency: Apache Log4j 2.12.1 (CVE-2021-45046)","message":"","description":"It was found that the fix to address CVE-2021-44228 in Apache Log4j 2.15.0 was incomplete in certain non-default configurations. This could allows attackers with control over Thread Context Map (MDC) input data when the logging configuration uses a non-default Pattern Layout with either a Context Lookup (for example, $${ctx:loginId}) or a Thread Context Map pattern (%X, %mdc, or %MDC) to craft malicious input data using a JNDI Lookup pattern resulting in an information leak and remote code execution in some environments and local code execution in all environments. Log4j 2.16.0 (Java 8) and 2.12.2 (Java 7) fix this issue by removing support for message lookup patterns and disabling JNDI functionality by default.\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| log4j-core 2.12.1  | 2.20.0  | 2.20.0 |\n\n\n[Click Here To See More Details in Polaris](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/e4a8bfc0-8df1-4c35-b49d-3a732191ce95/projects/d05f4c8f-65db-458e-8a12-3aa37b7e146c/components/dc279f3e-98e5-4589-a0e8-63ff1ef745a1?branchId=96b91994-4ffc-4051-b7a9-60adbc16163b&component=7460c937-f013-4c3a-bdf3-ace04cfd0304)\n\n\n## Description\nIt was found that the fix to address CVE-2021-44228 in Apache Log4j 2.15.0 was incomplete in certain non-default configurations. This could allows attackers with control over Thread Context Map (MDC) input data when the logging configuration uses a non-default Pattern Layout with either a Context Lookup (for example, $${ctx:loginId}) or a Thread Context Map pattern (%X, %mdc, or %MDC) to craft malicious input data using a JNDI Lookup pattern resulting in an information leak and remote code execution in some environments and local code execution in all environments. Log4j 2.16.0 (Java 8) and 2.12.2 (Java 7) fix this issue by removing support for message lookup patterns and disabling JNDI functionality by default.\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2021-45046](https://openhub.net/vulnerabilities/bdsa/CVE-2021-45046) - Expression Language Injection (EL-Injection)\n\n\n\n\n\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-917](https://cwe.mitre.org/data/definitions/917.html)\n\n","cve":"","severity":"Critical","confidence":"","scanner":{"id":"","name":"","vendor":{"name":""}},"location":{"file":"file://unknown-file","start_line":1,"end_line":null,"dependency":{"package":{"name":"Apache Log4j","version":"2.12.1"},"version":"2.12.1"}},"identifiers":[{"type":"cwe","name":"CWE-917","value":"CWE-917","url":"https://cwe.mitre.org/data/definitions/917.html"},{"type":"_id","name":"CVE-2021-45046","value":"Direct Dependency: Apache Log4j 2.12.1 (CVE-2021-45046)","url":"https://openhub.net/vulnerabilities/bdsa/CVE-2021-45046"},{"type":"_id","name":"security","value":"security"},{"type":"_id","name":"Direct Dependency","value":"Direct Dependency"},{"type":"_id","name":"open_source_analysis","value":"open_source_analysis"},{"type":"_id","name":"patch_available","value":"patch_available"}]},{"id":"CVE-2020-9488 log4j-core 2.12.1: org.apache.logging.log4j","category":"dependency_scanning","name":"Direct Dependency: Apache Log4j 2.12.1 (CVE-2020-9488)","message":"","description":"Apache Log4j is vulnerable to man-in-the-middle (MITM) attacks due to improper SSL certificate validation due to host name mismatch. An attacker could exploit this by mounting a man-in-the-middle attack which could leak log messages sent through SMTPS.\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| log4j-core 2.12.1  | 2.20.0  | 2.20.0 |\n\n\n[Click Here To See More Details in Polaris](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/e4a8bfc0-8df1-4c35-b49d-3a732191ce95/projects/d05f4c8f-65db-458e-8a12-3aa37b7e146c/components/dc279f3e-98e5-4589-a0e8-63ff1ef745a1?branchId=96b91994-4ffc-4051-b7a9-60adbc16163b&component=7460c937-f013-4c3a-bdf3-ace04cfd0304)\n\n\n## Description\nApache Log4j is vulnerable to man-in-the-middle (MITM) attacks due to improper SSL certificate validation due to host name mismatch. An attacker could exploit this by mounting a man-in-the-middle attack which could leak log messages sent through SMTPS.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-9488](https://openhub.net/vulnerabilities/bdsa/CVE-2020-9488) - Improper Validation of Certificate with Host Mismatch\n\n\n\n## Solution\nFixed in [**2.13.2-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.13.2-rc1) by [this](https://github.com/apache/logging-log4j2/commit/6851b5083) commit.\n\nFixed in [**2.3.2-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.3.2-rc1) by [this](https://github.com/apache/logging-log4j2/commit/3c62f0bea692456b1b5039d3bcc1c3e0ba65146a) commit.\n\nThe latest stable releases are available [here](https://github.com/apache/logging-log4j2/tags).\n\n## Workaround\nVendor supplied the following workaround:\n> Set the system property `mail.smtp.ssl.checkserveridentity` to `true` to globally enable hostname verification for SMTPS connections.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-297](https://cwe.mitre.org/data/definitions/297.html)\n* Common Weakness Enumeration: [CWE-300](https://cwe.mitre.org/data/definitions/300.html)\n\n","cve":"","severity":"Medium","confidence":"","scanner":{"id":"","name":"","vendor":{"name":""}},"location":{"file":"file://unknown-file","start_line":1,"end_line":null,"dependency":{"package":{"name":"Apache Log4j","version":"2.12.1"},"version":"2.12.1"}},"identifiers":[{"type":"cwe","name":"CWE-300","value":"CWE-300","url":"https://cwe.mitre.org/data/definitions/300.html"},{"type":"cwe","name":"CWE-297","value":"CWE-297","url":"https://cwe.mitre.org/data/definitions/297.html"},{"type":"_id","name":"CVE-2020-9488","value":"Direct Dependency: Apache Log4j 2.12.1 (CVE-2020-9488)","url":"https://openhub.net/vulnerabilities/bdsa/CVE-2020-9488"},{"type":"_id","name":"security","value":"security"},{"type":"_id","name":"Direct Dependency","value":"Direct Dependency"},{"type":"_id","name":"open_source_analysis","value":"open_source_analysis"},{"type":"_id","name":"patch_available","value":"patch_available"}]},{"id":"CVE-2021-45105 log4j-core 2.12.1: org.apache.logging.log4j","category":"dependency_scanning","name":"Direct Dependency: Apache Log4j 2.12.1 (CVE-2021-45105)","message":"","description":"Apache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted.\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| log4j-core 2.12.1  | 2.20.0  | 2.20.0 |\n\n\n[Click Here To See More Details in Polaris](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/e4a8bfc0-8df1-4c35-b49d-3a732191ce95/projects/d05f4c8f-65db-458e-8a12-3aa37b7e146c/components/dc279f3e-98e5-4589-a0e8-63ff1ef745a1?branchId=96b91994-4ffc-4051-b7a9-60adbc16163b&component=7460c937-f013-4c3a-bdf3-ace04cfd0304)\n\n\n## Description\nApache log4j is vulnerable to a denial-of-service (DoS) when uncontrolled recursion occurs through a self-referencing lookup.  An attacker can trigger a DoS with malicious input data that generates a recursive lookup  and consequent application crash.\n\nSuccessful attacks require the attacker to have access to Thread Context Map (MDC) input, and for log4j configured with non-default pattern layout with a Context Lookup.\n\nOnly the log4j-core JAR file is impacted by this vulnerability. Applications using only the log4j-api JAR file without the log4j-core JAR file are not impacted.\n\nApache Log4j is the only Logging Services subproject affected by this vulnerability. Other projects like Log4net  are not impacted.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-45105](https://openhub.net/vulnerabilities/bdsa/CVE-2021-45105) - Loop with Unreachable Exit Condition ('Infinite Loop')\n\n\n\n## Solution\nFixed in version [**2.17.0**](https://downloads.apache.org/logging/log4j/2.17.0/)  by [this](https://github.com/apache/logging-log4j2/commit/806023265f8c905b2dd1d81fd2458f64b2ea0b5e) commit.\n\nFixed in [**2.12.3-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.12.3-rc1) by [this](https://github.com/apache/logging-log4j2/commit/bf7e916df6335713fe2219c7b3b523fb509deabc) commit.\n\nFixed in [**2.3.1-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.3.1-rc1) by [this](https://github.com/apache/logging-log4j2/commit/ce6b78d082aae89089cb3ad25cdd46e9ec70a70b) commit.\n\n\nThe latest stable releases can be found [here](https://github.com/apache/logging-log4j2/releases).\n\n## Workaround\nThe vendor advises that  this vulnerability can can be mitigated through one of the following:\n\n* In PatternLayout in the logging configuration, replace Context Lookups like `${ctx:loginId}` or `$${ctx:loginId}` with Thread Context Map patterns `(%X, %mdc, or %MDC)`.\n\n* Alternatively,  remove references in the configuration to Context Lookups like `${ctx:loginId}` or `$${ctx:loginId}` where they originate from sources external to the application such as HTTP headers or user input.\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-835](https://cwe.mitre.org/data/definitions/835.html)\n\n","cve":"","severity":"Medium","confidence":"","scanner":{"id":"","name":"","vendor":{"name":""}},"location":{"file":"file://unknown-file","start_line":1,"end_line":null,"dependency":{"package":{"name":"Apache Log4j","version":"2.12.1"},"version":"2.12.1"}},"identifiers":[{"type":"cwe","name":"CWE-835","value":"CWE-835","url":"https://cwe.mitre.org/data/definitions/835.html"},{"type":"_id","name":"CVE-2021-45105","value":"Direct Dependency: Apache Log4j 2.12.1 (CVE-2021-45105)","url":"https://openhub.net/vulnerabilities/bdsa/CVE-2021-45105"},{"type":"_id","name":"security","value":"security"},{"type":"_id","name":"Direct Dependency","value":"Direct Dependency"},{"type":"_id","name":"open_source_analysis","value":"open_source_analysis"},{"type":"_id","name":"patch_available","value":"patch_available"}]},{"id":"CVE-2021-44832 log4j-core 2.12.1: org.apache.logging.log4j","category":"dependency_scanning","name":"Direct Dependency: Apache Log4j 2.12.1 (CVE-2021-44832)","message":"","description":"Apache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core.\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| log4j-core 2.12.1  | 2.20.0  | 2.20.0 |\n\n\n[Click Here To See More Details in Polaris](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/e4a8bfc0-8df1-4c35-b49d-3a732191ce95/projects/d05f4c8f-65db-458e-8a12-3aa37b7e146c/components/dc279f3e-98e5-4589-a0e8-63ff1ef745a1?branchId=96b91994-4ffc-4051-b7a9-60adbc16163b&component=7460c937-f013-4c3a-bdf3-ace04cfd0304)\n\n\n## Description\nApache Log4j contains a remote code execution (RCE) vulnerability. This allows an attacker that has permissions to modify the logging configuration files to input a malicious JDBC Appender with a data source referencing a JDNI URI. This can then lead to RCE.\n\n**Note:** This vulnerability impacts log4j-core.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2021-44832](https://openhub.net/vulnerabilities/bdsa/CVE-2021-44832) - Weak Input Validation\n\n\n\n## Solution\nFixed in versions:\n\n* [**2.3.2-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.3.2-rc1) by [this](https://github.com/apache/logging-log4j2/commit/ae4dc0c1a6389ae895f60451cd87e97e7b9d85c1) commit.\n* [**2.12.4-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.12.4-rc1) by [this](https://github.com/apache/logging-log4j2/commit/b3879958cb3b75eb16bf27e970538b6e4e130f1c) commit.\n* [**2.17.1-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.17.1-rc1) by [this](https://github.com/apache/logging-log4j2/commit/05db5f9527254632b59aed2a1d78a32c5ab74f16) commit.\n\nThe latest stable releases can be found [here](https://logging.apache.org/log4j/2.x/download.html).\n\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n\n","cve":"","severity":"Medium","confidence":"","scanner":{"id":"","name":"","vendor":{"name":""}},"location":{"file":"file://unknown-file","start_line":1,"end_line":null,"dependency":{"package":{"name":"Apache Log4j","version":"2.12.1"},"version":"2.12.1"}},"identifiers":[{"type":"cwe","name":"CWE-20","value":"CWE-20","url":"https://cwe.mitre.org/data/definitions/20.html"},{"type":"_id","name":"CVE-2021-44832","value":"Direct Dependency: Apache Log4j 2.12.1 (CVE-2021-44832)","url":"https://openhub.net/vulnerabilities/bdsa/CVE-2021-44832"},{"type":"_id","name":"security","value":"security"},{"type":"_id","name":"Direct Dependency","value":"Direct Dependency"},{"type":"_id","name":"open_source_analysis","value":"open_source_analysis"},{"type":"_id","name":"patch_available","value":"patch_available"}]},{"id":"CVE-2020-13956 httpclient 4.5.1: rest-assured 2.9.0: org.apache.httpcomponents","category":"dependency_scanning","name":"Transitive Dependency: Apache HttpClient 4.5.1 from rest-assured 2.9.0 (CVE-2020-13956)","message":"","description":"Apache HttpClient is vulnerable to the disclosure and modification of data due to the mishandling of malformed URIs. An attacker could pass a maliciously crafted request to a vulnerable application, which will then be executed on an incorrect host.\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| httpclient 4.5.1  | 4.5.14  | 4.5.14 |\n\n\n[Click Here To See More Details in Polaris](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/e4a8bfc0-8df1-4c35-b49d-3a732191ce95/projects/d05f4c8f-65db-458e-8a12-3aa37b7e146c/components/d8d07222-8808-4c35-8116-e85183f74f18?branchId=96b91994-4ffc-4051-b7a9-60adbc16163b&component=f624d758-10d3-449d-96d2-d4fc12499fda)\n\n\n## Description\nApache HttpClient is vulnerable to the disclosure and modification of data due to the mishandling of malformed URIs. An attacker could pass a maliciously crafted request to a vulnerable application, which will then be executed on an incorrect host.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-13956](https://openhub.net/vulnerabilities/bdsa/CVE-2020-13956) - Weak Input Validation\n\n\n\n## Solution\nFixed in [**5.0.3**](https://hc.apache.org/downloads.cgi) by [this](https://github.com/apache/httpcomponents-client/commit/894234a5aeb9958e7e466c383e4d0ded17a9a813) commit, and in [**4.5.13**](https://hc.apache.org/downloads.cgi) by [this](https://github.com/apache/httpcomponents-client/commit/e628b4c5c464c2fa346385596cc78e035a91a62e) commit.\n\n\n\n## Dependency tree\n- ReachabilityTests:ReachabilityTests:0.0.1-SNAPSHOT:-maven\n    - com.jayway.restassured:rest-assured:2.9.0\n        - org.apache.httpcomponents:httpclient:4.5.1\n\n\n## References\n* Common Weakness Enumeration: [CWE-20](https://cwe.mitre.org/data/definitions/20.html)\n* Common Weakness Enumeration: [CWE-229](https://cwe.mitre.org/data/definitions/229.html)\n\n","cve":"","severity":"Medium","confidence":"","scanner":{"id":"","name":"","vendor":{"name":""}},"location":{"file":"file://unknown-file","start_line":1,"end_line":null,"dependency":{"package":{"name":"Apache HttpClient","version":"4.5.1"},"version":"4.5.1"}},"identifiers":[{"type":"cwe","name":"CWE-229","value":"CWE-229","url":"https://cwe.mitre.org/data/definitions/229.html"},{"type":"cwe","name":"CWE-20","value":"CWE-20","url":"https://cwe.mitre.org/data/definitions/20.html"},{"type":"_id","name":"CVE-2020-13956","value":"Transitive Dependency: Apache HttpClient 4.5.1 from rest-assured 2.9.0 (CVE-2020-13956)","url":"https://openhub.net/vulnerabilities/bdsa/CVE-2020-13956"},{"type":"_id","name":"security","value":"security"},{"type":"_id","name":"Transitive Dependency","value":"Transitive Dependency"},{"type":"_id","name":"open_source_analysis","value":"open_source_analysis"},{"type":"_id","name":"patch_available","value":"patch_available"}]},{"id":"CVE-2016-6814 groovy 2.4.4: rest-assured 2.9.0: org.codehaus.groovy","category":"dependency_scanning","name":"Transitive Dependency: Apache Groovy 2.4.4 from rest-assured 2.9.0 (CVE-2016-6814)","message":"","description":"A flaw within Groovy allows remote attackers to perform remote code execution (RCE) or denial-of-service (DoS) via specially crafted serialized objects.  \n\nIt has been noted that this vulnerability is similar to **CVE-2015-3253** however exploitation differs.\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| groovy 2.4.4  | 2.5.22  | 3.0.17 |\n\n\n[Click Here To See More Details in Polaris](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/e4a8bfc0-8df1-4c35-b49d-3a732191ce95/projects/d05f4c8f-65db-458e-8a12-3aa37b7e146c/components/d6ffff64-15c6-4485-a539-bdded06d8f56?branchId=96b91994-4ffc-4051-b7a9-60adbc16163b&component=81f45bb9-9c2e-4a23-be4b-2a85101048a1)\n\n\n## Description\nA flaw within Groovy allows remote attackers to perform remote code execution (RCE) or denial-of-service (DoS) via specially crafted serialized objects.  \n\nIt has been noted that this vulnerability is similar to **CVE-2015-3253** however exploitation differs.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2016-6814](https://openhub.net/vulnerabilities/bdsa/CVE-2016-6814) - Improper Neutralization of Special Elements used in a Command\n\n\n\n## Solution\nFixed in version [**2.4.8**](https://archive.apache.org/dist/groovy/2.4.8/sources/).\n\n## Workaround\nUsers of older versions of Groovy can apply the following patch to the `MethodClosure` class\n(`src/main/org/codehaus/groovy/runtime/MethodClosure.java`):\n\n```\npublic class MethodClosure extends Closure {\n+    private void readObject(java.io.ObjectInputStream stream) throws\nIOException, ClassNotFoundException {\n+        if (ALLOW_RESOLVE) {\n+            stream.defaultReadObject();\n+        }\n+        throw new UnsupportedOperationException();\n+    }\n```\n\n## Dependency tree\n- ReachabilityTests:ReachabilityTests:0.0.1-SNAPSHOT:-maven\n    - com.jayway.restassured:rest-assured:2.9.0\n        - org.codehaus.groovy:groovy:2.4.4\n\n\n## References\n* Common Weakness Enumeration: [CWE-77](https://cwe.mitre.org/data/definitions/77.html)\n\n","cve":"","severity":"High","confidence":"","scanner":{"id":"","name":"","vendor":{"name":""}},"location":{"file":"file://unknown-file","start_line":1,"end_line":null,"dependency":{"package":{"name":"Apache Groovy","version":"2.4.4"},"version":"2.4.4"}},"identifiers":[{"type":"cwe","name":"CWE-77","value":"CWE-77","url":"https://cwe.mitre.org/data/definitions/77.html"},{"type":"_id","name":"CVE-2016-6814","value":"Transitive Dependency: Apache Groovy 2.4.4 from rest-assured 2.9.0 (CVE-2016-6814)","url":"https://openhub.net/vulnerabilities/bdsa/CVE-2016-6814"},{"type":"_id","name":"security","value":"security"},{"type":"_id","name":"Transitive Dependency","value":"Transitive Dependency"},{"type":"_id","name":"open_source_analysis","value":"open_source_analysis"},{"type":"_id","name":"patch_available","value":"patch_available"}]},{"id":"CVE-2020-17521 groovy 2.4.4: rest-assured 2.9.0: org.codehaus.groovy","category":"dependency_scanning","name":"Transitive Dependency: Apache Groovy 2.4.4 from rest-assured 2.9.0 (CVE-2020-17521)","message":"","description":"Apache Groovy is vulnerable to privilege escalation and information exposure due to inappropriate use of an insecure JDK method. A local attacker could exploit this vulnerability by supplying a system with maliciously crafted input.\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| groovy 2.4.4  | 2.5.22  | 3.0.17 |\n\n\n[Click Here To See More Details in Polaris](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/e4a8bfc0-8df1-4c35-b49d-3a732191ce95/projects/d05f4c8f-65db-458e-8a12-3aa37b7e146c/components/d6ffff64-15c6-4485-a539-bdded06d8f56?branchId=96b91994-4ffc-4051-b7a9-60adbc16163b&component=81f45bb9-9c2e-4a23-be4b-2a85101048a1)\n\n\n## Description\nApache Groovy is vulnerable to privilege escalation and information exposure due to inappropriate use of an insecure JDK method. A local attacker could exploit this vulnerability by supplying a system with maliciously crafted input.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-17521](https://openhub.net/vulnerabilities/bdsa/CVE-2020-17521) - Sensitive Data Exposure\n\n\n\n## Solution\nFixed in:\n* [**2.4.21**](https://github.com/apache/groovy/releases/tag/GROOVY_2_4_21) by [this](https://github.com/apache/groovy/commit/4e418d4a34c973a7ec1e822552103043ac13780e) commit,\n* [**2.5.14**](https://github.com/apache/groovy/releases/tag/GROOVY_2_5_14) by [this](https://github.com/apache/groovy/commit/98dc5d713926cd81b006c510a1546ccd520fe17f) commit,\n* [**3.0.7**](https://github.com/apache/groovy/releases/tag/GROOVY_3_0_7) by [this](https://github.com/apache/groovy/commit/f069c35c4bbaf68547c76381509d59840a7ed32d) commit,\n* [**4.0.0-alpha-2**](https://github.com/apache/groovy/releases/tag/GROOVY_4_0_0_ALPHA_2) by [this](https://github.com/apache/groovy/commit/bcbe5c4c76db83736166530647c024ac1e47ef28) commit.\n\nNote: the vendor states that the fix for **2.4**, when Groovy is running on a pre-JDK7 version of the JDK, eliminates the risk of privilege escalation but still leaves the potential for sensitive information leakage. The vendor recommends applying the following mitigation for **2.4**/pre-JDK7 users:\n> Set the `java.io.tmpdir` system environment variable to a directory that is exclusively owned by the executing user.\n\n\n\n## Dependency tree\n- ReachabilityTests:ReachabilityTests:0.0.1-SNAPSHOT:-maven\n    - com.jayway.restassured:rest-assured:2.9.0\n        - org.codehaus.groovy:groovy:2.4.4\n\n\n## References\n* Common Weakness Enumeration: [CWE-200](https://cwe.mitre.org/data/definitions/200.html)\n* Common Weakness Enumeration: [CWE-379](https://cwe.mitre.org/data/definitions/379.html)\n\n","cve":"","severity":"Medium","confidence":"","scanner":{"id":"","name":"","vendor":{"name":""}},"location":{"file":"file://unknown-file","start_line":1,"end_line":null,"dependency":{"package":{"name":"Apache Groovy","version":"2.4.4"},"version":"2.4.4"}},"identifiers":[{"type":"cwe","name":"CWE-379","value":"CWE-379","url":"https://cwe.mitre.org/data/definitions/379.html"},{"type":"cwe","name":"CWE-200","value":"CWE-200","url":"https://cwe.mitre.org/data/definitions/200.html"},{"type":"_id","name":"CVE-2020-17521","value":"Transitive Dependency: Apache Groovy 2.4.4 from rest-assured 2.9.0 (CVE-2020-17521)","url":"https://openhub.net/vulnerabilities/bdsa/CVE-2020-17521"},{"type":"_id","name":"security","value":"security"},{"type":"_id","name":"Transitive Dependency","value":"Transitive Dependency"},{"type":"_id","name":"open_source_analysis","value":"open_source_analysis"},{"type":"_id","name":"patch_available","value":"patch_available"}]},{"id":"BDSA-2016-0487 groovy 2.4.4: rest-assured 2.9.0: org.codehaus.groovy","category":"dependency_scanning","name":"Transitive Dependency: Apache Groovy 2.4.4 from rest-assured 2.9.0 (BDSA-2016-0487)","message":"","description":"Apache Groovy contains a remote code execution information disclosure vulnerability.\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| groovy 2.4.4  | 2.5.22  | 3.0.17 |\n\n\n[Click Here To See More Details in Polaris](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/e4a8bfc0-8df1-4c35-b49d-3a732191ce95/projects/d05f4c8f-65db-458e-8a12-3aa37b7e146c/components/d6ffff64-15c6-4485-a539-bdded06d8f56?branchId=96b91994-4ffc-4051-b7a9-60adbc16163b&component=81f45bb9-9c2e-4a23-be4b-2a85101048a1)\n\n\n## Description\nApache Groovy contains a remote code execution information disclosure vulnerability.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [BDSA-2016-0487](https://openhub.net/vulnerabilities/bdsa/BDSA-2016-0487) - Insecure Object Deserialization\n\n\n\n## Solution\nUpgrade to version 2.4.8\n\n## Workaround\nUsers of older versions of Groovy can apply the following patch to the `MethodClosure` class in`src/main/org/codehaus/groovy/runtime/MethodClosure.java`:\n\n```\n\npublic class MethodClosure extends Closure {\n+    private void readObject(java.io.ObjectInputStream stream) throws\nIOException, ClassNotFoundException {\n+        if (ALLOW_RESOLVE) {\n+            stream.defaultReadObject();\n+        }\n+        throw new UnsupportedOperationException();\n+    }\n\n```\n\n## Dependency tree\n- ReachabilityTests:ReachabilityTests:0.0.1-SNAPSHOT:-maven\n    - com.jayway.restassured:rest-assured:2.9.0\n        - org.codehaus.groovy:groovy:2.4.4\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","cve":"","severity":"Low","confidence":"","scanner":{"id":"","name":"","vendor":{"name":""}},"location":{"file":"file://unknown-file","start_line":1,"end_line":null,"dependency":{"package":{"name":"Apache Groovy","version":"2.4.4"},"version":"2.4.4"}},"identifiers":[{"type":"cwe","name":"CWE-502","value":"CWE-502","url":"https://cwe.mitre.org/data/definitions/502.html"},{"type":"_id","name":"BDSA-2016-0487","value":"Transitive Dependency: Apache Groovy 2.4.4 from rest-assured 2.9.0 (BDSA-2016-0487)","url":"https://openhub.net/vulnerabilities/bdsa/BDSA-2016-0487"},{"type":"_id","name":"security","value":"security"},{"type":"_id","name":"Transitive Dependency","value":"Transitive Dependency"},{"type":"_id","name":"open_source_analysis","value":"open_source_analysis"},{"type":"_id","name":"patch_available","value":"patch_available"}]},{"id":"CVE-2016-6814 groovy-json 2.4.4: rest-assured 2.9.0: org.codehaus.groovy","category":"dependency_scanning","name":"Transitive Dependency: Apache Groovy 2.4.4 from rest-assured 2.9.0 (CVE-2016-6814)","message":"","description":"A flaw within Groovy allows remote attackers to perform remote code execution (RCE) or denial-of-service (DoS) via specially crafted serialized objects.  \n\nIt has been noted that this vulnerability is similar to **CVE-2015-3253** however exploitation differs.\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| groovy-json 2.4.4  | 2.5.22  | 3.0.17 |\n\n\n[Click Here To See More Details in Polaris](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/e4a8bfc0-8df1-4c35-b49d-3a732191ce95/projects/d05f4c8f-65db-458e-8a12-3aa37b7e146c/components/d6ffff64-15c6-4485-a539-bdded06d8f56?branchId=96b91994-4ffc-4051-b7a9-60adbc16163b&component=81f45bb9-9c2e-4a23-be4b-2a85101048a1)\n\n\n## Description\nA flaw within Groovy allows remote attackers to perform remote code execution (RCE) or denial-of-service (DoS) via specially crafted serialized objects.  \n\nIt has been noted that this vulnerability is similar to **CVE-2015-3253** however exploitation differs.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2016-6814](https://openhub.net/vulnerabilities/bdsa/CVE-2016-6814) - Improper Neutralization of Special Elements used in a Command\n\n\n\n## Solution\nFixed in version [**2.4.8**](https://archive.apache.org/dist/groovy/2.4.8/sources/).\n\n## Workaround\nUsers of older versions of Groovy can apply the following patch to the `MethodClosure` class\n(`src/main/org/codehaus/groovy/runtime/MethodClosure.java`):\n\n```\npublic class MethodClosure extends Closure {\n+    private void readObject(java.io.ObjectInputStream stream) throws\nIOException, ClassNotFoundException {\n+        if (ALLOW_RESOLVE) {\n+            stream.defaultReadObject();\n+        }\n+        throw new UnsupportedOperationException();\n+    }\n```\n\n## Dependency tree\n- ReachabilityTests:ReachabilityTests:0.0.1-SNAPSHOT:-maven\n    - com.jayway.restassured:rest-assured:2.9.0\n        - com.jayway.restassured:json-path:2.9.0\n            - org.codehaus.groovy:groovy-json:2.4.4\n\n\n## References\n* Common Weakness Enumeration: [CWE-77](https://cwe.mitre.org/data/definitions/77.html)\n\n","cve":"","severity":"High","confidence":"","scanner":{"id":"","name":"","vendor":{"name":""}},"location":{"file":"file://unknown-file","start_line":1,"end_line":null,"dependency":{"package":{"name":"Apache Groovy","version":"2.4.4"},"version":"2.4.4"}},"identifiers":[{"type":"cwe","name":"CWE-77","value":"CWE-77","url":"https://cwe.mitre.org/data/definitions/77.html"},{"type":"_id","name":"CVE-2016-6814","value":"Transitive Dependency: Apache Groovy 2.4.4 from rest-assured 2.9.0 (CVE-2016-6814)","url":"https://openhub.net/vulnerabilities/bdsa/CVE-2016-6814"},{"type":"_id","name":"security","value":"security"},{"type":"_id","name":"Transitive Dependency","value":"Transitive Dependency"},{"type":"_id","name":"open_source_analysis","value":"open_source_analysis"},{"type":"_id","name":"patch_available","value":"patch_available"}]},{"id":"CVE-2020-17521 groovy-json 2.4.4: rest-assured 2.9.0: org.codehaus.groovy","category":"dependency_scanning","name":"Transitive Dependency: Apache Groovy 2.4.4 from rest-assured 2.9.0 (CVE-2020-17521)","message":"","description":"Apache Groovy is vulnerable to privilege escalation and information exposure due to inappropriate use of an insecure JDK method. A local attacker could exploit this vulnerability by supplying a system with maliciously crafted input.\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| groovy-json 2.4.4  | 2.5.22  | 3.0.17 |\n\n\n[Click Here To See More Details in Polaris](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/e4a8bfc0-8df1-4c35-b49d-3a732191ce95/projects/d05f4c8f-65db-458e-8a12-3aa37b7e146c/components/d6ffff64-15c6-4485-a539-bdded06d8f56?branchId=96b91994-4ffc-4051-b7a9-60adbc16163b&component=81f45bb9-9c2e-4a23-be4b-2a85101048a1)\n\n\n## Description\nApache Groovy is vulnerable to privilege escalation and information exposure due to inappropriate use of an insecure JDK method. A local attacker could exploit this vulnerability by supplying a system with maliciously crafted input.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-17521](https://openhub.net/vulnerabilities/bdsa/CVE-2020-17521) - Sensitive Data Exposure\n\n\n\n## Solution\nFixed in:\n* [**2.4.21**](https://github.com/apache/groovy/releases/tag/GROOVY_2_4_21) by [this](https://github.com/apache/groovy/commit/4e418d4a34c973a7ec1e822552103043ac13780e) commit,\n* [**2.5.14**](https://github.com/apache/groovy/releases/tag/GROOVY_2_5_14) by [this](https://github.com/apache/groovy/commit/98dc5d713926cd81b006c510a1546ccd520fe17f) commit,\n* [**3.0.7**](https://github.com/apache/groovy/releases/tag/GROOVY_3_0_7) by [this](https://github.com/apache/groovy/commit/f069c35c4bbaf68547c76381509d59840a7ed32d) commit,\n* [**4.0.0-alpha-2**](https://github.com/apache/groovy/releases/tag/GROOVY_4_0_0_ALPHA_2) by [this](https://github.com/apache/groovy/commit/bcbe5c4c76db83736166530647c024ac1e47ef28) commit.\n\nNote: the vendor states that the fix for **2.4**, when Groovy is running on a pre-JDK7 version of the JDK, eliminates the risk of privilege escalation but still leaves the potential for sensitive information leakage. The vendor recommends applying the following mitigation for **2.4**/pre-JDK7 users:\n> Set the `java.io.tmpdir` system environment variable to a directory that is exclusively owned by the executing user.\n\n\n\n## Dependency tree\n- ReachabilityTests:ReachabilityTests:0.0.1-SNAPSHOT:-maven\n    - com.jayway.restassured:rest-assured:2.9.0\n        - com.jayway.restassured:json-path:2.9.0\n            - org.codehaus.groovy:groovy-json:2.4.4\n\n\n## References\n* Common Weakness Enumeration: [CWE-200](https://cwe.mitre.org/data/definitions/200.html)\n* Common Weakness Enumeration: [CWE-379](https://cwe.mitre.org/data/definitions/379.html)\n\n","cve":"","severity":"Medium","confidence":"","scanner":{"id":"","name":"","vendor":{"name":""}},"location":{"file":"file://unknown-file","start_line":1,"end_line":null,"dependency":{"package":{"name":"Apache Groovy","version":"2.4.4"},"version":"2.4.4"}},"identifiers":[{"type":"cwe","name":"CWE-379","value":"CWE-379","url":"https://cwe.mitre.org/data/definitions/379.html"},{"type":"cwe","name":"CWE-200","value":"CWE-200","url":"https://cwe.mitre.org/data/definitions/200.html"},{"type":"_id","name":"CVE-2020-17521","value":"Transitive Dependency: Apache Groovy 2.4.4 from rest-assured 2.9.0 (CVE-2020-17521)","url":"https://openhub.net/vulnerabilities/bdsa/CVE-2020-17521"},{"type":"_id","name":"security","value":"security"},{"type":"_id","name":"Transitive Dependency","value":"Transitive Dependency"},{"type":"_id","name":"open_source_analysis","value":"open_source_analysis"},{"type":"_id","name":"patch_available","value":"patch_available"}]},{"id":"BDSA-2016-0487 groovy-json 2.4.4: rest-assured 2.9.0: org.codehaus.groovy","category":"dependency_scanning","name":"Transitive Dependency: Apache Groovy 2.4.4 from rest-assured 2.9.0 (BDSA-2016-0487)","message":"","description":"Apache Groovy contains a remote code execution information disclosure vulnerability.\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| groovy-json 2.4.4  | 2.5.22  | 3.0.17 |\n\n\n[Click Here To See More Details in Polaris](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/e4a8bfc0-8df1-4c35-b49d-3a732191ce95/projects/d05f4c8f-65db-458e-8a12-3aa37b7e146c/components/d6ffff64-15c6-4485-a539-bdded06d8f56?branchId=96b91994-4ffc-4051-b7a9-60adbc16163b&component=81f45bb9-9c2e-4a23-be4b-2a85101048a1)\n\n\n## Description\nApache Groovy contains a remote code execution information disclosure vulnerability.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [BDSA-2016-0487](https://openhub.net/vulnerabilities/bdsa/BDSA-2016-0487) - Insecure Object Deserialization\n\n\n\n## Solution\nUpgrade to version 2.4.8\n\n## Workaround\nUsers of older versions of Groovy can apply the following patch to the `MethodClosure` class in`src/main/org/codehaus/groovy/runtime/MethodClosure.java`:\n\n```\n\npublic class MethodClosure extends Closure {\n+    private void readObject(java.io.ObjectInputStream stream) throws\nIOException, ClassNotFoundException {\n+        if (ALLOW_RESOLVE) {\n+            stream.defaultReadObject();\n+        }\n+        throw new UnsupportedOperationException();\n+    }\n\n```\n\n## Dependency tree\n- ReachabilityTests:ReachabilityTests:0.0.1-SNAPSHOT:-maven\n    - com.jayway.restassured:rest-assured:2.9.0\n        - com.jayway.restassured:json-path:2.9.0\n            - org.codehaus.groovy:groovy-json:2.4.4\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","cve":"","severity":"Low","confidence":"","scanner":{"id":"","name":"","vendor":{"name":""}},"location":{"file":"file://unknown-file","start_line":1,"end_line":null,"dependency":{"package":{"name":"Apache Groovy","version":"2.4.4"},"version":"2.4.4"}},"identifiers":[{"type":"cwe","name":"CWE-502","value":"CWE-502","url":"https://cwe.mitre.org/data/definitions/502.html"},{"type":"_id","name":"BDSA-2016-0487","value":"Transitive Dependency: Apache Groovy 2.4.4 from rest-assured 2.9.0 (BDSA-2016-0487)","url":"https://openhub.net/vulnerabilities/bdsa/BDSA-2016-0487"},{"type":"_id","name":"security","value":"security"},{"type":"_id","name":"Transitive Dependency","value":"Transitive Dependency"},{"type":"_id","name":"open_source_analysis","value":"open_source_analysis"},{"type":"_id","name":"patch_available","value":"patch_available"}]},{"id":"CVE-2016-6814 groovy-xml 2.4.4: rest-assured 2.9.0: org.codehaus.groovy","category":"dependency_scanning","name":"Transitive Dependency: Apache Groovy 2.4.4 from rest-assured 2.9.0 (CVE-2016-6814)","message":"","description":"A flaw within Groovy allows remote attackers to perform remote code execution (RCE) or denial-of-service (DoS) via specially crafted serialized objects.  \n\nIt has been noted that this vulnerability is similar to **CVE-2015-3253** however exploitation differs.\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| groovy-xml 2.4.4  | 2.5.22  | 3.0.17 |\n\n\n[Click Here To See More Details in Polaris](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/e4a8bfc0-8df1-4c35-b49d-3a732191ce95/projects/d05f4c8f-65db-458e-8a12-3aa37b7e146c/components/d6ffff64-15c6-4485-a539-bdded06d8f56?branchId=96b91994-4ffc-4051-b7a9-60adbc16163b&component=81f45bb9-9c2e-4a23-be4b-2a85101048a1)\n\n\n## Description\nA flaw within Groovy allows remote attackers to perform remote code execution (RCE) or denial-of-service (DoS) via specially crafted serialized objects.  \n\nIt has been noted that this vulnerability is similar to **CVE-2015-3253** however exploitation differs.\n\n## Vulnerabilities(BDSA,CVE)\n:orange_circle: [CVE-2016-6814](https://openhub.net/vulnerabilities/bdsa/CVE-2016-6814) - Improper Neutralization of Special Elements used in a Command\n\n\n\n## Solution\nFixed in version [**2.4.8**](https://archive.apache.org/dist/groovy/2.4.8/sources/).\n\n## Workaround\nUsers of older versions of Groovy can apply the following patch to the `MethodClosure` class\n(`src/main/org/codehaus/groovy/runtime/MethodClosure.java`):\n\n```\npublic class MethodClosure extends Closure {\n+    private void readObject(java.io.ObjectInputStream stream) throws\nIOException, ClassNotFoundException {\n+        if (ALLOW_RESOLVE) {\n+            stream.defaultReadObject();\n+        }\n+        throw new UnsupportedOperationException();\n+    }\n```\n\n## Dependency tree\n- ReachabilityTests:ReachabilityTests:0.0.1-SNAPSHOT:-maven\n    - com.jayway.restassured:rest-assured:2.9.0\n        - org.codehaus.groovy:groovy-xml:2.4.4\n\n\n## References\n* Common Weakness Enumeration: [CWE-77](https://cwe.mitre.org/data/definitions/77.html)\n\n","cve":"","severity":"High","confidence":"","scanner":{"id":"","name":"","vendor":{"name":""}},"location":{"file":"file://unknown-file","start_line":1,"end_line":null,"dependency":{"package":{"name":"Apache Groovy","version":"2.4.4"},"version":"2.4.4"}},"identifiers":[{"type":"cwe","name":"CWE-77","value":"CWE-77","url":"https://cwe.mitre.org/data/definitions/77.html"},{"type":"_id","name":"CVE-2016-6814","value":"Transitive Dependency: Apache Groovy 2.4.4 from rest-assured 2.9.0 (CVE-2016-6814)","url":"https://openhub.net/vulnerabilities/bdsa/CVE-2016-6814"},{"type":"_id","name":"security","value":"security"},{"type":"_id","name":"Transitive Dependency","value":"Transitive Dependency"},{"type":"_id","name":"open_source_analysis","value":"open_source_analysis"},{"type":"_id","name":"patch_available","value":"patch_available"}]},{"id":"CVE-2020-17521 groovy-xml 2.4.4: rest-assured 2.9.0: org.codehaus.groovy","category":"dependency_scanning","name":"Transitive Dependency: Apache Groovy 2.4.4 from rest-assured 2.9.0 (CVE-2020-17521)","message":"","description":"Apache Groovy is vulnerable to privilege escalation and information exposure due to inappropriate use of an insecure JDK method. A local attacker could exploit this vulnerability by supplying a system with maliciously crafted input.\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| groovy-xml 2.4.4  | 2.5.22  | 3.0.17 |\n\n\n[Click Here To See More Details in Polaris](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/e4a8bfc0-8df1-4c35-b49d-3a732191ce95/projects/d05f4c8f-65db-458e-8a12-3aa37b7e146c/components/d6ffff64-15c6-4485-a539-bdded06d8f56?branchId=96b91994-4ffc-4051-b7a9-60adbc16163b&component=81f45bb9-9c2e-4a23-be4b-2a85101048a1)\n\n\n## Description\nApache Groovy is vulnerable to privilege escalation and information exposure due to inappropriate use of an insecure JDK method. A local attacker could exploit this vulnerability by supplying a system with maliciously crafted input.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2020-17521](https://openhub.net/vulnerabilities/bdsa/CVE-2020-17521) - Sensitive Data Exposure\n\n\n\n## Solution\nFixed in:\n* [**2.4.21**](https://github.com/apache/groovy/releases/tag/GROOVY_2_4_21) by [this](https://github.com/apache/groovy/commit/4e418d4a34c973a7ec1e822552103043ac13780e) commit,\n* [**2.5.14**](https://github.com/apache/groovy/releases/tag/GROOVY_2_5_14) by [this](https://github.com/apache/groovy/commit/98dc5d713926cd81b006c510a1546ccd520fe17f) commit,\n* [**3.0.7**](https://github.com/apache/groovy/releases/tag/GROOVY_3_0_7) by [this](https://github.com/apache/groovy/commit/f069c35c4bbaf68547c76381509d59840a7ed32d) commit,\n* [**4.0.0-alpha-2**](https://github.com/apache/groovy/releases/tag/GROOVY_4_0_0_ALPHA_2) by [this](https://github.com/apache/groovy/commit/bcbe5c4c76db83736166530647c024ac1e47ef28) commit.\n\nNote: the vendor states that the fix for **2.4**, when Groovy is running on a pre-JDK7 version of the JDK, eliminates the risk of privilege escalation but still leaves the potential for sensitive information leakage. The vendor recommends applying the following mitigation for **2.4**/pre-JDK7 users:\n> Set the `java.io.tmpdir` system environment variable to a directory that is exclusively owned by the executing user.\n\n\n\n## Dependency tree\n- ReachabilityTests:ReachabilityTests:0.0.1-SNAPSHOT:-maven\n    - com.jayway.restassured:rest-assured:2.9.0\n        - org.codehaus.groovy:groovy-xml:2.4.4\n\n\n## References\n* Common Weakness Enumeration: [CWE-200](https://cwe.mitre.org/data/definitions/200.html)\n* Common Weakness Enumeration: [CWE-379](https://cwe.mitre.org/data/definitions/379.html)\n\n","cve":"","severity":"Medium","confidence":"","scanner":{"id":"","name":"","vendor":{"name":""}},"location":{"file":"file://unknown-file","start_line":1,"end_line":null,"dependency":{"package":{"name":"Apache Groovy","version":"2.4.4"},"version":"2.4.4"}},"identifiers":[{"type":"cwe","name":"CWE-379","value":"CWE-379","url":"https://cwe.mitre.org/data/definitions/379.html"},{"type":"cwe","name":"CWE-200","value":"CWE-200","url":"https://cwe.mitre.org/data/definitions/200.html"},{"type":"_id","name":"CVE-2020-17521","value":"Transitive Dependency: Apache Groovy 2.4.4 from rest-assured 2.9.0 (CVE-2020-17521)","url":"https://openhub.net/vulnerabilities/bdsa/CVE-2020-17521"},{"type":"_id","name":"security","value":"security"},{"type":"_id","name":"Transitive Dependency","value":"Transitive Dependency"},{"type":"_id","name":"open_source_analysis","value":"open_source_analysis"},{"type":"_id","name":"patch_available","value":"patch_available"}]},{"id":"BDSA-2016-0487 groovy-xml 2.4.4: rest-assured 2.9.0: org.codehaus.groovy","category":"dependency_scanning","name":"Transitive Dependency: Apache Groovy 2.4.4 from rest-assured 2.9.0 (BDSA-2016-0487)","message":"","description":"Apache Groovy contains a remote code execution information disclosure vulnerability.\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| groovy-xml 2.4.4  | 2.5.22  | 3.0.17 |\n\n\n[Click Here To See More Details in Polaris](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/e4a8bfc0-8df1-4c35-b49d-3a732191ce95/projects/d05f4c8f-65db-458e-8a12-3aa37b7e146c/components/d6ffff64-15c6-4485-a539-bdded06d8f56?branchId=96b91994-4ffc-4051-b7a9-60adbc16163b&component=81f45bb9-9c2e-4a23-be4b-2a85101048a1)\n\n\n## Description\nApache Groovy contains a remote code execution information disclosure vulnerability.\n\n## Vulnerabilities(BDSA,CVE)\n:large_blue_circle: [BDSA-2016-0487](https://openhub.net/vulnerabilities/bdsa/BDSA-2016-0487) - Insecure Object Deserialization\n\n\n\n## Solution\nUpgrade to version 2.4.8\n\n## Workaround\nUsers of older versions of Groovy can apply the following patch to the `MethodClosure` class in`src/main/org/codehaus/groovy/runtime/MethodClosure.java`:\n\n```\n\npublic class MethodClosure extends Closure {\n+    private void readObject(java.io.ObjectInputStream stream) throws\nIOException, ClassNotFoundException {\n+        if (ALLOW_RESOLVE) {\n+            stream.defaultReadObject();\n+        }\n+        throw new UnsupportedOperationException();\n+    }\n\n```\n\n## Dependency tree\n- ReachabilityTests:ReachabilityTests:0.0.1-SNAPSHOT:-maven\n    - com.jayway.restassured:rest-assured:2.9.0\n        - org.codehaus.groovy:groovy-xml:2.4.4\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","cve":"","severity":"Low","confidence":"","scanner":{"id":"","name":"","vendor":{"name":""}},"location":{"file":"file://unknown-file","start_line":1,"end_line":null,"dependency":{"package":{"name":"Apache Groovy","version":"2.4.4"},"version":"2.4.4"}},"identifiers":[{"type":"cwe","name":"CWE-502","value":"CWE-502","url":"https://cwe.mitre.org/data/definitions/502.html"},{"type":"_id","name":"BDSA-2016-0487","value":"Transitive Dependency: Apache Groovy 2.4.4 from rest-assured 2.9.0 (BDSA-2016-0487)","url":"https://openhub.net/vulnerabilities/bdsa/BDSA-2016-0487"},{"type":"_id","name":"security","value":"security"},{"type":"_id","name":"Transitive Dependency","value":"Transitive Dependency"},{"type":"_id","name":"open_source_analysis","value":"open_source_analysis"},{"type":"_id","name":"patch_available","value":"patch_available"}]},{"id":"CVE-2022-4065 testng 7.0.0: org.testng","category":"dependency_scanning","name":"Direct Dependency: TestNG 7.0.0 (CVE-2022-4065)","message":"","description":"TestNG contains a path traversal vulnerability. A remote attacker that can convince a victim to download an run a crafted JAR file via the command line argument `-testjar` may have arbitrary files written to their system.\n\n**Note:** it is only possible write files with the `.xml`, `.yaml` and `.yml` extensions via this vulnerability. If an attacker can convince a user to run such a payload, it is just as likely they can achieve arbitrary code execution via crafted Java code within the JAR file.\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| testng 7.0.0  | 7.7.1  | 7.7.1 |\n\n\n[Click Here To See More Details in Polaris](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/e4a8bfc0-8df1-4c35-b49d-3a732191ce95/projects/d05f4c8f-65db-458e-8a12-3aa37b7e146c/components/27a89e88-e7ba-4c46-b5f7-dc8b6ed3be6b?branchId=96b91994-4ffc-4051-b7a9-60adbc16163b&component=e7e83390-611a-45fa-90bc-52e763aa8313)\n\n\n## Description\nTestNG contains a path traversal vulnerability. A remote attacker that can convince a victim to download an run a crafted JAR file via the command line argument `-testjar` may have arbitrary files written to their system.\n\n**Note:** it is only possible write files with the `.xml`, `.yaml` and `.yml` extensions via this vulnerability. If an attacker can convince a user to run such a payload, it is just as likely they can achieve arbitrary code execution via crafted Java code within the JAR file.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-4065](https://openhub.net/vulnerabilities/bdsa/CVE-2022-4065) - Directory Traversal\n\n\n\n## Solution\nFixed in version [**7.7.0-rc1**](https://github.com/testng-team/testng/releases/tag/7.7.0-rc1) by [this](https://github.com/testng-team/testng/commit/9150736cd2c123a6a3b60e6193630859f9f0422b) commit and in version [**7.5.1-rc1**](https://github.com/testng-team/testng/releases/tag/7.5.1-rc1) by [this](https://github.com/testng-team/testng/commit/18810fcb2745fcc9d1f7226e956c2aaabeec7f21) commit.\n\nThe latest stable releases can be found [here](https://github.com/testng-team/testng/releases/).\n\n## Workaround\nA workaround has been provided by third party analysts [here](https://github.com/advisories/GHSA-rc2q-x9mf-w3vf).\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-22](https://cwe.mitre.org/data/definitions/22.html)\n\n","cve":"","severity":"Medium","confidence":"","scanner":{"id":"","name":"","vendor":{"name":""}},"location":{"file":"file://unknown-file","start_line":1,"end_line":null,"dependency":{"package":{"name":"TestNG","version":"7.0.0"},"version":"7.0.0"}},"identifiers":[{"type":"cwe","name":"CWE-22","value":"CWE-22","url":"https://cwe.mitre.org/data/definitions/22.html"},{"type":"_id","name":"CVE-2022-4065","value":"Direct Dependency: TestNG 7.0.0 (CVE-2022-4065)","url":"https://openhub.net/vulnerabilities/bdsa/CVE-2022-4065"},{"type":"_id","name":"security","value":"security"},{"type":"_id","name":"Direct Dependency","value":"Direct Dependency"},{"type":"_id","name":"open_source_analysis","value":"open_source_analysis"},{"type":"_id","name":"patch_available","value":"patch_available"}]},{"id":"CVE-2021-44228 log4j-slf4j-impl 2.12.1: org.apache.logging.log4j","category":"dependency_scanning","name":"Direct Dependency: Apache Log4j SLF4J Binding 2.12.1 (CVE-2021-44228)","message":"","description":"Apache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity & Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| log4j-slf4j-impl 2.12.1  | 2.20.0  | 2.20.0 |\n\n\n[Click Here To See More Details in Polaris](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/e4a8bfc0-8df1-4c35-b49d-3a732191ce95/projects/d05f4c8f-65db-458e-8a12-3aa37b7e146c/components/f2360258-39de-4bac-b5eb-d20d1b695bb3?branchId=96b91994-4ffc-4051-b7a9-60adbc16163b&component=925f23a2-2f52-4adb-a1cc-637d8424dff2)\n\n\n## Description\nApache Log4j, as used in many popular services, is vulnerable to improperly allowing lightweight directory access protocol (LDAP) access via Java naming and directory interface (JNDI). A remote attacker able to supply the end application with specially crafted input that is then processed by the Log4j subcomponent could cause the execution of arbitrary Java code.\n\n**Note** \n\n- log4j-api packages by themselves do not contain the vulnerable functionality and are therefore unaffected. log4j-core packages and the upstream overarching source repository are affected.\n\n- A previously suggested mitigation of setting environment variable `LOG4J_FORMAT_MSG_NO_LOOKUPS=true` is not recommended. This mitigation has been proven inadequate against this vulnerability. \n\n- This vulnerability is partially fixed in [**2.15.0-rc2**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.15.0-rc2) by [this](https://github.com/apache/logging-log4j2/commit/001aaada7dab82c3c09cde5f8e14245dc9d8b454) commit and [this](https://github.com/apache/logging-log4j2/commit/bac0d8a35c7e354a0d3f706569116dff6c6bd658) commit. These fixes were deemed incomplete. See BDSA-2021-3779 (CVE-2021-45046) for more details.\n\nThis vulnerability is listed as exploitable by the Cybersecurity & Infrastructure Security Agency in their [Known Exploited Vulnerabilities Catalog](https://www.cisa.gov/known-exploited-vulnerabilities-catalog).\n\n## Vulnerabilities(BDSA,CVE)\n:red_circle: [CVE-2021-44228](https://openhub.net/vulnerabilities/bdsa/CVE-2021-44228) - Insecure Object Deserialization\n\n\n\n## Solution\nFixed in versions:\n*  [**2.16.0-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.16.0-rc1) by [this](https://github.com/apache/logging-log4j2/commit/27972043b76c9645476f561c5adc483dec6d3f5d) commit.\n*  [**2.12.2-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.12.2-rc1) by [this](https://github.com/apache/logging-log4j2/commit/f819c83804152cb6ed94cb408302e36b21b65053) commit and [this](https://github.com/apache/logging-log4j2/commit/70edc233343815d5efa043b54294a6fb065aa1c5) commit.\n*   [**2.3.1-rc1**](https://github.com/apache/logging-log4j2/releases/tag/log4j-2.3.1-rc1) by [this](https://github.com/apache/logging-log4j2/commit/be848dacbac6df30c4f32b2852e24446033ecf79) commit and [this](https://github.com/apache/logging-log4j2/commit/f6564bb993d547d0a371b75d869042c334bf57f0) commit.\n\nThe latest releases can be found [here](https://github.com/apache/logging-log4j2/tags).\n\nNOTE: It is recommended to upgrade to version  [**2.17.0**](https://downloads.apache.org/logging/log4j/2.17.0/). This recommendation is due to related vulnerabilities (BDSA-2021-3779, CVE-2021-45046) affecting the version that this vulnerability is fixed in.\n\n## Workaround\nThe vendor states that:\n\n> This issue can be mitigated in prior releases (<**2.16.0**) by removing the JndiLookup class from the classpath (example: `zip -q -d log4j-core-*.jar org/apache/logging/log4j/core/lookup/JndiLookup.class`).\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-502](https://cwe.mitre.org/data/definitions/502.html)\n\n","cve":"","severity":"Critical","confidence":"","scanner":{"id":"","name":"","vendor":{"name":""}},"location":{"file":"file://unknown-file","start_line":1,"end_line":null,"dependency":{"package":{"name":"Apache Log4j SLF4J Binding","version":"2.12.1"},"version":"2.12.1"}},"identifiers":[{"type":"cwe","name":"CWE-502","value":"CWE-502","url":"https://cwe.mitre.org/data/definitions/502.html"},{"type":"_id","name":"CVE-2021-44228","value":"Direct Dependency: Apache Log4j SLF4J Binding 2.12.1 (CVE-2021-44228)","url":"https://openhub.net/vulnerabilities/bdsa/CVE-2021-44228"},{"type":"_id","name":"security","value":"security"},{"type":"_id","name":"Direct Dependency","value":"Direct Dependency"},{"type":"_id","name":"open_source_analysis","value":"open_source_analysis"},{"type":"_id","name":"patch_available","value":"patch_available"}]},{"id":"CVE-2022-45688 json 20190722: org.json","category":"dependency_scanning","name":"Direct Dependency: JSON-java 20190722 (CVE-2022-45688)","message":"","description":"JSON-Java contains a vulnerability which can result in a stack-based buffer overflow. A remote attacker could exploit this vulnerability by using a crafted XML file in order to cause a denial-of-service (DoS) condition.\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| json 20190722  | 20190722.0.0.redhat-00002  | 20230227 |\n\n\n[Click Here To See More Details in Polaris](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/e4a8bfc0-8df1-4c35-b49d-3a732191ce95/projects/d05f4c8f-65db-458e-8a12-3aa37b7e146c/components/8fb653e0-e678-440a-aaff-a52e96ba460a?branchId=96b91994-4ffc-4051-b7a9-60adbc16163b&component=e4ee0bd5-2d0e-494f-b293-22e0314e3acb)\n\n\n## Description\nJSON-Java contains a vulnerability which can result in a stack-based buffer overflow. A remote attacker could exploit this vulnerability by using a crafted XML file in order to cause a denial-of-service (DoS) condition.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2022-45688](https://openhub.net/vulnerabilities/bdsa/CVE-2022-45688) - Stack-based Buffer Overflow\n\n\n\n## Solution\nFixed in version [**20230227**](https://github.com/stleary/JSON-java/releases/tag/20230227) by [this](https://github.com/stleary/JSON-java/commit/f566a1d9ee1f8139357017dc6c7def1da19cd8d4) and [this](https://github.com/stleary/JSON-java/commit/eb56704e68a186f975400e009d28d4e0b5d887ec) commit.\n\nThe latest stable releases can be found [here](https://github.com/stleary/JSON-java/releases).\n\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-121](https://cwe.mitre.org/data/definitions/121.html)\n\n","cve":"","severity":"Medium","confidence":"","scanner":{"id":"","name":"","vendor":{"name":""}},"location":{"file":"file://unknown-file","start_line":1,"end_line":null,"dependency":{"package":{"name":"JSON-java","version":"20190722"},"version":"20190722"}},"identifiers":[{"type":"cwe","name":"CWE-121","value":"CWE-121","url":"https://cwe.mitre.org/data/definitions/121.html"},{"type":"_id","name":"CVE-2022-45688","value":"Direct Dependency: JSON-java 20190722 (CVE-2022-45688)","url":"https://openhub.net/vulnerabilities/bdsa/CVE-2022-45688"},{"type":"_id","name":"security","value":"security"},{"type":"_id","name":"Direct Dependency","value":"Direct Dependency"},{"type":"_id","name":"open_source_analysis","value":"open_source_analysis"},{"type":"_id","name":"patch_available","value":"patch_available"}]},{"id":"CVE-2023-5072 json 20190722: org.json","category":"dependency_scanning","name":"Direct Dependency: JSON-java 20190722 (CVE-2023-5072)","message":"","description":"JSON-java contains a denial-of-service (DoS) vulnerability due to an error within the parsing of embedded null characters. Successful exploitation of this issue enables an unauthenticated attacker to supply a specially crafted string in order to implement a denial-of-service (DoS) condition.\n## Upgrade Guidance\n\n\n\n| **Affected Dependency**  | **Recommended short term version** | **Recommended long term version** |\n| :--- | :--- | :--- |\n| json 20190722  | 20190722.0.0.redhat-00002  | 20230227 |\n\n\n[Click Here To See More Details in Polaris](https://poc.polaris.blackduck.com/portfolio/portfolios/00296cd0-45bc-40be-8d02-fc1a3203abde/portfolio-items/e4a8bfc0-8df1-4c35-b49d-3a732191ce95/projects/d05f4c8f-65db-458e-8a12-3aa37b7e146c/components/8fb653e0-e678-440a-aaff-a52e96ba460a?branchId=96b91994-4ffc-4051-b7a9-60adbc16163b&component=e4ee0bd5-2d0e-494f-b293-22e0314e3acb)\n\n\n## Description\nJSON-java contains a denial-of-service (DoS) vulnerability due to an error within the parsing of embedded null characters. Successful exploitation of this issue enables an unauthenticated attacker to supply a specially crafted string in order to implement a denial-of-service (DoS) condition.\n\n## Vulnerabilities(BDSA,CVE)\n:yellow_circle: [CVE-2023-5072](https://openhub.net/vulnerabilities/bdsa/CVE-2023-5072) - Allocation of Resources Without Limits or Throttling\n\n\n\n## Solution\nFixed in version [**20231013**](https://github.com/stleary/JSON-java/releases/tag/20231013) by [this](https://github.com/stleary/JSON-java/commit/60662e2) commit.\n\nThe latest stable releases can be found [here](https://github.com/stleary/JSON-java/releases).\n\n\n\n\n\n## References\n* Common Weakness Enumeration: [CWE-770](https://cwe.mitre.org/data/definitions/770.html)\n\n","cve":"","severity":"Medium","confidence":"","scanner":{"id":"","name":"","vendor":{"name":""}},"location":{"file":"file://unknown-file","start_line":1,"end_line":null,"dependency":{"package":{"name":"JSON-java","version":"20190722"},"version":"20190722"}},"identifiers":[{"type":"cwe","name":"CWE-770","value":"CWE-770","url":"https://cwe.mitre.org/data/definitions/770.html"},{"type":"_id","name":"CVE-2023-5072","value":"Direct Dependency: JSON-java 20190722 (CVE-2023-5072)","url":"https://openhub.net/vulnerabilities/bdsa/CVE-2023-5072"},{"type":"_id","name":"security","value":"security"},{"type":"_id","name":"Direct Dependency","value":"Direct Dependency"},{"type":"_id","name":"open_source_analysis","value":"open_source_analysis"},{"type":"_id","name":"patch_available","value":"patch_available"}]}],"scan":{"analyzer":{"id":"","name":"","vendor":{"name":"Black Duck"},"version":"N/A"},"scanner":{"id":"","name":"","vendor":{"name":"Black Duck"},"version":"N/A"},"type":"dependency_scanning","start_time":"2025-03-20T16:53:28","end_time":"2025-03-20T16:53:28","status":"success"},"dependency_files":null}
